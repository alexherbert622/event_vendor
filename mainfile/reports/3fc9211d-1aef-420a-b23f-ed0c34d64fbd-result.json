{"name": "test_TC_11_edit_vendor", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-syf-c39=\"\" href=\"javascript:void(0)\">...</a> is not clickable at point (1423, 232). Other element would receive the click: <div _ngcontent-syf-c1=\"\" id=\"spinner\" class=\"backdrop ng-star-inserted\" style=\"opacity: 0.2;\">...</div>\n  (Session info: chrome=112.0.5615.138)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00D9DCE3+50899]\n\t(No symbol) [0x00D2E111]\n\t(No symbol) [0x00C35588]\n\t(No symbol) [0x00C65A7A]\n\t(No symbol) [0x00C64336]\n\t(No symbol) [0x00C6267B]\n\t(No symbol) [0x00C61797]\n\t(No symbol) [0x00C594A5]\n\t(No symbol) [0x00C7B8FC]\n\t(No symbol) [0x00C58EC6]\n\t(No symbol) [0x00C7BC54]\n\t(No symbol) [0x00C8E01C]\n\t(No symbol) [0x00C7B6F6]\n\t(No symbol) [0x00C57708]\n\t(No symbol) [0x00C5886D]\n\tGetHandleVerifier [0x01003EAE+2566302]\n\tGetHandleVerifier [0x010392B1+2784417]\n\tGetHandleVerifier [0x0103327C+2759788]\n\tGetHandleVerifier [0x00E35740+672048]\n\t(No symbol) [0x00D38872]\n\t(No symbol) [0x00D341C8]\n\t(No symbol) [0x00D342AB]\n\t(No symbol) [0x00D271B7]\n\tBaseThreadInitThunk [0x769D7D49+25]\n\tRtlInitializeExceptionChain [0x7795B74B+107]\n\tRtlClearBits [0x7795B6CF+191]", "trace": "self = <mainfile.eventvendor.TestEpo object at 0x0000022C4FE78280>\n\n    @allure.description('To edit the details of vendor')\n    def test_TC_11_edit_vendor(self):\n        editvendor = Edit_vendor(self.driver)\n        time.sleep(3)\n        editvendor.Detail_button().click()\n        time.sleep(3)\n>       editvendor.Edit_button().click()\n\neventvendor.py:206: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022C4FE78FA0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...dInitThunk [0x769D7D49+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7795B74B+107]\\\\n\\\\tRtlClearBits [0x7795B6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-syf-c39=\"\" href=\"javascript:void(0)\">...</a> is not clickable at point (1423, 232). Other element would receive the click: <div _ngcontent-syf-c1=\"\" id=\"spinner\" class=\"backdrop ng-star-inserted\" style=\"opacity: 0.2;\">...</div>\nE         (Session info: chrome=112.0.5615.138)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00D9DCE3+50899]\nE       \t(No symbol) [0x00D2E111]\nE       \t(No symbol) [0x00C35588]\nE       \t(No symbol) [0x00C65A7A]\nE       \t(No symbol) [0x00C64336]\nE       \t(No symbol) [0x00C6267B]\nE       \t(No symbol) [0x00C61797]\nE       \t(No symbol) [0x00C594A5]\nE       \t(No symbol) [0x00C7B8FC]\nE       \t(No symbol) [0x00C58EC6]\nE       \t(No symbol) [0x00C7BC54]\nE       \t(No symbol) [0x00C8E01C]\nE       \t(No symbol) [0x00C7B6F6]\nE       \t(No symbol) [0x00C57708]\nE       \t(No symbol) [0x00C5886D]\nE       \tGetHandleVerifier [0x01003EAE+2566302]\nE       \tGetHandleVerifier [0x010392B1+2784417]\nE       \tGetHandleVerifier [0x0103327C+2759788]\nE       \tGetHandleVerifier [0x00E35740+672048]\nE       \t(No symbol) [0x00D38872]\nE       \t(No symbol) [0x00D341C8]\nE       \t(No symbol) [0x00D342AB]\nE       \t(No symbol) [0x00D271B7]\nE       \tBaseThreadInitThunk [0x769D7D49+25]\nE       \tRtlInitializeExceptionChain [0x7795B74B+107]\nE       \tRtlClearBits [0x7795B6CF+191]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "To edit the details of vendor", "start": 1683902845215, "stop": 1683902852748, "uuid": "ee6c8794-ae4c-4e2c-b950-53793cdfb621", "historyId": "be9b8258f38eb0d102ec610e45975c02", "testCaseId": "1e252d385ab4e486346801b1b846c565", "fullName": "eventvendor.TestEpo#test_TC_11_edit_vendor", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "suite", "value": "eventvendor"}, {"name": "subSuite", "value": "TestEpo"}, {"name": "host", "value": "Alexherbertraj"}, {"name": "thread", "value": "16036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "eventvendor"}]}