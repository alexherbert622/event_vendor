{"name": "test_TC_13_delete_vendor", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[contains(text(), \"Yes, Remove it!\")]\"}\n  (Session info: chrome=112.0.5615.138)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x004FDCE3+50899]\n\t(No symbol) [0x0048E111]\n\t(No symbol) [0x00395588]\n\t(No symbol) [0x003C08F9]\n\t(No symbol) [0x003C0AFB]\n\t(No symbol) [0x003EF902]\n\t(No symbol) [0x003DB944]\n\t(No symbol) [0x003EE01C]\n\t(No symbol) [0x003DB6F6]\n\t(No symbol) [0x003B7708]\n\t(No symbol) [0x003B886D]\n\tGetHandleVerifier [0x00763EAE+2566302]\n\tGetHandleVerifier [0x007992B1+2784417]\n\tGetHandleVerifier [0x0079327C+2759788]\n\tGetHandleVerifier [0x00595740+672048]\n\t(No symbol) [0x00498872]\n\t(No symbol) [0x004941C8]\n\t(No symbol) [0x004942AB]\n\t(No symbol) [0x004871B7]\n\tBaseThreadInitThunk [0x769D7D49+25]\n\tRtlInitializeExceptionChain [0x7795B74B+107]\n\tRtlClearBits [0x7795B6CF+191]", "trace": "self = <mainfile.eventvendor.TestEpo object at 0x000001C91204CAF0>\n\n    @allure.description('To delete the specific vendor')\n    def test_TC_13_delete_vendor(self):\n        deletevendor = Delete_vendor(self.driver)\n        time.sleep(7)\n        vendor_names = deletevendor.Vendor_name()\n        f = -1\n        for s in vendor_names:\n            f = f + 1\n            names3 = s.text\n            if names3 == \"kelli4 tatey4\":\n                deletevendor.Vendor_delete()[f].click()\n                time.sleep(3)\n                break\n>       deletevendor.Confim_delete().click()\n\neventvendor.py:391: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObject\\Delete_vendor.py:22: in Confim_delete\n    return self.driver.find_element(*Delete_vendor.confirm_delete)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C91200BF70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x769D7D49+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7795B74B+107]\\\\n\\\\tRtlClearBits [0x7795B6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[contains(text(), \"Yes, Remove it!\")]\"}\nE         (Session info: chrome=112.0.5615.138)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x004FDCE3+50899]\nE       \t(No symbol) [0x0048E111]\nE       \t(No symbol) [0x00395588]\nE       \t(No symbol) [0x003C08F9]\nE       \t(No symbol) [0x003C0AFB]\nE       \t(No symbol) [0x003EF902]\nE       \t(No symbol) [0x003DB944]\nE       \t(No symbol) [0x003EE01C]\nE       \t(No symbol) [0x003DB6F6]\nE       \t(No symbol) [0x003B7708]\nE       \t(No symbol) [0x003B886D]\nE       \tGetHandleVerifier [0x00763EAE+2566302]\nE       \tGetHandleVerifier [0x007992B1+2784417]\nE       \tGetHandleVerifier [0x0079327C+2759788]\nE       \tGetHandleVerifier [0x00595740+672048]\nE       \t(No symbol) [0x00498872]\nE       \t(No symbol) [0x004941C8]\nE       \t(No symbol) [0x004942AB]\nE       \t(No symbol) [0x004871B7]\nE       \tBaseThreadInitThunk [0x769D7D49+25]\nE       \tRtlInitializeExceptionChain [0x7795B74B+107]\nE       \tRtlClearBits [0x7795B6CF+191]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException"}, "description": "To delete the specific vendor", "start": 1683976084772, "stop": 1683976091954, "uuid": "fccecfbd-247e-489f-97d2-67ff14d689af", "historyId": "8570ff53e5199b595387305853f3fba1", "testCaseId": "7b75495bb1063229151b4d0ef97ee5d5", "fullName": "eventvendor.TestEpo#test_TC_13_delete_vendor", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "suite", "value": "eventvendor"}, {"name": "subSuite", "value": "TestEpo"}, {"name": "host", "value": "Alexherbertraj"}, {"name": "thread", "value": "6716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "eventvendor"}]}